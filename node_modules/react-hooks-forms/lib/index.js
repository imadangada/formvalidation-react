"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.useForm = exports.defineForm = void 0;
var tslib_1 = require("tslib");
var react_1 = require("react");
var defineForm = function (definition) { return definition; };
exports.defineForm = defineForm;
var deriveFormState = function (formDefinition, formState, setField) {
    var form = {};
    var formIsValid = true;
    Object.keys(formDefinition).forEach(function (fieldName) {
        var definition = formDefinition[fieldName];
        var state = formState[fieldName];
        var isValid = typeof definition.isValid === 'function' ? definition.isValid(state.value, formState) : true;
        var isPristine = state.isPristine;
        form[fieldName] = tslib_1.__assign(tslib_1.__assign({}, state), { isValid: isValid, isValidOrPristine: isPristine || isValid, setValue: function (value) { return setField(fieldName, value); }, onChange: function (event) {
                if (event.currentTarget.type === 'radio' && !event.currentTarget.checked) {
                    return;
                }
                setField(fieldName, event.currentTarget.type === 'checkbox'
                    ? event.currentTarget.checked
                    : event.currentTarget.value);
            } });
        formIsValid = formIsValid && isValid;
    });
    return [form, formIsValid];
};
var formStateFromDefinition = function (formDefinition) {
    var form = {};
    Object.keys(formDefinition).forEach(function (fieldName) {
        form[fieldName] = {
            value: formDefinition[fieldName].value,
            isPristine: true,
        };
    });
    return form;
};
var formStateFromJson = function (formJson) {
    var form = {};
    Object.keys(formJson).forEach(function (fieldName) {
        form[fieldName] = {
            value: formJson[fieldName],
            isPristine: true,
        };
    });
    return form;
};
var useForm = function (formDefinition) {
    var _a = react_1.useState(function () { return formStateFromDefinition(formDefinition); }), form = _a[0], setForm = _a[1];
    var setField = function (name, value) {
        var _a;
        setForm(tslib_1.__assign(tslib_1.__assign({}, form), (_a = {}, _a[name] = tslib_1.__assign(tslib_1.__assign({}, form[name]), { value: value, isPristine: false }), _a)));
    };
    var reset = function (formJson) {
        if (formJson) {
            setForm(formStateFromJson(formJson));
        }
        else {
            setForm(formStateFromDefinition(formDefinition));
        }
    };
    var formToJson = function () {
        var json = {};
        Object.keys(form).forEach(function (field) {
            json[field] = form[field].value;
        });
        return json;
    };
    var _b = deriveFormState(formDefinition, form, setField), fields = _b[0], isValid = _b[1];
    var clearPristine = function () {
        if (!isValid) {
            var dirtyForm_1 = {};
            Object.keys(form).forEach(function (fieldName) {
                dirtyForm_1[fieldName] = tslib_1.__assign(tslib_1.__assign({}, form[fieldName]), { isPristine: false });
            });
            setForm(dirtyForm_1);
        }
    };
    var onSubmit = function (submitHandler) { return function (e) {
        e.preventDefault();
        clearPristine();
        if (isValid) {
            return submitHandler(formToJson());
        }
    }; };
    return {
        fields: fields,
        isValid: isValid,
        reset: reset,
        onSubmit: onSubmit,
        formToJson: formToJson,
    };
};
exports.useForm = useForm;
//# sourceMappingURL=index.js.map